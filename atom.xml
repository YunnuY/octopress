<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YunnuY]]></title>
  <link href="http://YunnuY.github.com/atom.xml" rel="self"/>
  <link href="http://YunnuY.github.com/"/>
  <updated>2013-03-18T23:42:13+08:00</updated>
  <id>http://YunnuY.github.com/</id>
  <author>
    <name><![CDATA[YunnuY Software]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[highlight the current navigation]]></title>
    <link href="http://YunnuY.github.com/blog/2013/03/18/highlight-the-current-navigation/"/>
    <updated>2013-03-18T23:05:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2013/03/18/highlight-the-current-navigation</id>
    <content type="html"><![CDATA[<p>Why do we need highlight the current navigation? Best pratice suggests that we should always indicate <br/>
links to the page the user is currently on. It&#8217;s a very common and reasonable request when we involved in the UI development.</p>

<!--more-->


<p>Ok, the important point is how to highlight the current navigation. I got many answers after i googled and<br/>
i plan to share the most efficient and easy to implement solution.
This solution uses JavaScript to match the URL of the current<br/>
page to the URL of the link. The JavaScript simply gets the URL of the current page, then it looks through all the links in the navigation<br/>
menu you target. If the link href matches the url of the page, it adds an extra CSS class to that link. Here the <code>current</code> is.</p>

<p>The html code is like below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul id="nav"&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="index.html"&gt;主页&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="column.html"&gt;栏目&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;</span></code></pre></td></tr></table></div></figure>


<p>And javascript code is like below:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>  var nav = document.getElementById("nav");
</span><span class='line'>  var links = document.getElementsByTagName("li");
</span><span class='line'>  var lilen = document.getElementsByTagName("a");
</span><span class='line'>  var currenturl = document.location.href;
</span><span class='line'>  var last = 0;
</span><span class='line'>  for (var i=0; i&lt;links.length; i++)
</span><span class='line'>  {
</span><span class='line'>      var linkurl = lilen[i].getAttribute("href");
</span><span class='line'>      if(currenturl.indexOf(linkurl)!=-1)
</span><span class='line'>      {
</span><span class='line'>          last = i-1;
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  links[last].className = "current";
</span><span class='line'>&lt;/script&gt;
</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it! You just highlight the current navigation! Congratulations~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootstrap Basic]]></title>
    <link href="http://YunnuY.github.com/blog/2013/03/08/bootstrap-basic/"/>
    <updated>2013-03-08T23:25:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2013/03/08/bootstrap-basic</id>
    <content type="html"><![CDATA[<p>According to the <a href="http://twitter.github.com/bootstrap/index.html">offical website</a>:
<code>Bootstrap</code> is a sleek, intuitive, and powerful front-end framework.      <br/>
Made for faster and easier web development.
How to put Bootstrap to use? Simple! Just download the bootstrap.</p>

<!--more-->


<p>Once downloaded, unzip the compressed folder to see the structure of (the compiled) Bootstrap. You&#8217;ll see something like this:<br/>
<img src="http://YunnuY.github.com/images/Bootstrap.png" alt="Bootstrap structure" />
And use it as the external normal <code>.css</code> file and <code>.js</code> file. Like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>  &lt;html&gt;
</span><span class='line'>      &lt;head&gt;
</span><span class='line'>            &lt;title&gt;Bootstrap 101 Template&lt;/title&gt;
</span><span class='line'>            &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
</span><span class='line'>            &lt;!-- Bootstrap --&gt;
</span><span class='line'>            &lt;link href="css/bootstrap.min.css" rel="stylesheet" media="screen"&gt;
</span><span class='line'>      &lt;/head&gt;
</span><span class='line'>      &lt;body&gt;
</span><span class='line'>            &lt;h1&gt;Hello, world!&lt;/h1&gt;
</span><span class='line'>            &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;
</span><span class='line'>      &lt;/body&gt;
</span><span class='line'>  &lt;/html&gt;</span></code></pre></td></tr></table></div></figure>


<p>And you&#8217;re set! With those two files added, you can begin to develop any site or application with Bootstrap.
Bootstrap is built on responsive 12-column grids, layouts, and components.
Bootstrap provided us fantastic css style for all kinds of components. And we have many options to choose.
The best way to learn Bootstrap is try to use it as many as possible. Let&#8217;s go~
<a href="http://www.yunnuy.com/blog/2013/03/08/bootstrap-basic/">Back to Top</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use PLACEHOLD.IT]]></title>
    <link href="http://YunnuY.github.com/blog/2013/03/07/how-to-use-placehold-dot-it/"/>
    <updated>2013-03-07T22:24:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2013/03/07/how-to-use-placehold-dot-it</id>
    <content type="html"><![CDATA[<p>Do you ever heard of <code>PLACEHOLD.IT</code> ?<br/>
What&#8217;s <code>PLACEHOLD.IT</code> ? A quick and simple image placeholder service. How does it work? <br/>
Just put your image size after our URL and you&#8217;ll get a placeholder.</p>

<!--more-->


<p>Like this: <code>http://placehold.it/350x150</code>   <br/>
You can also use it in your code, like this:    <br/>
<code>&lt;img src="http://placehold.it/350x150"&gt;</code> <br/>
You will get a image placeholder like below:<br/>
<img src="http://YunnuY.github.com/images/350x150.png" alt="Placehold for 350x150" /></p>

<p>But markdown does not support defining the height and width for the image. <br/>
so you can choose to use <code>&lt;image&gt;</code> tag if need.
Is it very simple and useful? Have fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trouble shooting rake preview]]></title>
    <link href="http://YunnuY.github.com/blog/2013/03/05/trouble-shooting-rake-preview/"/>
    <updated>2013-03-05T23:27:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2013/03/05/trouble-shooting-rake-preview</id>
    <content type="html"><![CDATA[<p>When i cloned one repo to my local disk and try to <code>rake clean-&gt; rake install[theme-name]--&gt;rake preview</code>,
I encountered the issue &#8216;Could not find&#8230; Run bundle install to install missing gems&#8217;, <br/>
so i run <code>bundle install</code> in the octopress directory, try to run <code>rake -T</code> to show the command rake related after bundle install
 <!-- more -->
is completed,then i encountered: &#8216;rake aborted  You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2.
Using bundle exec may solve this.&#8217;
It seems the version of rake is conflict. i executed below steps to slove this issue:</p>

<p><code>$ gem list</code>   (to show all the gems and their version installed(will see more than one versions for rake)), and i got:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** LOCAL GEMS ***
</span><span class='line'>...
</span><span class='line'>rake (0.9.2.2, 0.8.7)
</span><span class='line'>here it is...</span></code></pre></td></tr></table></div></figure>


<p><code>$ gem uninstall rake</code>  (since the version conflict, need to uninstall one version)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Select gem to uninstall:
</span><span class='line'> 1. rake-0.8.7
</span><span class='line'> 2. rake-0.9.2.2
</span><span class='line'> 3. All versions</span></code></pre></td></tr></table></div></figure>


<p>and i type into: <code>2</code>     (select the version you want to uninstall, it depends the rake verison your Gemfile requires)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>You have requested to uninstall the gem: rake-0.9.2.2
</span><span class='line'>addressable-2.2.6 depends on [rake (&gt;= 0.7.3)]
</span><span class='line'>...
</span><span class='line'>If you remove this gems, one or more dependencies will not be met.
</span><span class='line'>Continue with Uninstall? [Yn]  Y
</span><span class='line'>Successfully uninstalled rake-0.9.2.2
</span><span class='line'>INFO:  gem "0.9.2.2" is not installed</span></code></pre></td></tr></table></div></figure>


<p>Now i can preview the installed <code>theme</code> happily&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring Git]]></title>
    <link href="http://YunnuY.github.com/blog/2013/03/04/git-basic/"/>
    <updated>2013-03-04T23:21:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2013/03/04/git-basic</id>
    <content type="html"><![CDATA[<p>Even though i have touched <strong><code>Git</code></strong> many weeeks ago, but i never totally figure it very clearly. Even for now&#8230;
Before demonstrate and analyze every single Git statement usage. I would like to explain some terminologies first:<br/>
- <strong>Tracked files</strong> are files that were in the last snapshot; they can be unmodified, modified, or staged.
 <!-- more --> <br/>
- <strong>Untracked files</strong> are everything else - any files in your working directory that were not in your last
snapshot and are not in your staging area. Every file in your working directory can be in one of two states: <strong><code>tracked</code></strong> or <strong><code>untracked</code></strong>.
- <strong>Committed</strong> means that the data is safely stored in your local database.
<strong><code>Modified</code></strong> means that you have changed the file but have not committed it to your database yet.
- <strong>Staged</strong> means that you have marked a modified file in its current version to go into your next commit snapshot.
- <strong>Git directory</strong> is where Git stores the metadata and object database for your project. This is</p>

<pre><code>the most important part of Git, and it is what is copied when you clone a repository from another computer.
</code></pre>

<ul>
<li><strong>Working directory</strong> is a single checkout of one version of the project. These files are pulled out of
  the compressed database in the Git directory and placed on disk for you to use or modify.</li>
<li><strong>Staging area</strong> is a simple file, generally contained in your <strong><code>Git directory</code></strong>, that stores information
  about what will go into your next commit. It’s sometimes referred to as the <strong><code>index</code></strong>, but it’s becoming
  standard to refer to it as the staging area.</li>
</ul>


<h4>The basic Git workflow goes something like this:</h4>

<ul>
<li><strong>Modify files in your working directory.</strong></li>
<li><strong>Stage the files, adding snapshots of them to your staging area.</strong></li>
<li><strong>Submit a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.</strong></li>
</ul>


<h4>Let&#8217;s demonstrate the workflow using a simple example:</h4>

<h4>Checking the Status</h4>

<pre><code>$ git status
# On branch master
nothing to commit (working directory clean) 
When we do actions in Git, nearly all of them only add data to the Git database. So we add a new file named README.
$ git status
# On branch master
# Untracked files:
# (use "git add &lt;file&gt;..." to include in what will be committed)
#
# README
nothing added to commit but untracked files present (use "git add" to track)
It says README file is untracked, because it’s under the Untracked files heading in your status output. And Git tell
us how to track the untracked files. Let's do it.
</code></pre>

<h4>Tracking New Files</h4>

<pre><code>$ git add README
$ git status
# On branch master
# Changes to be committed:
# (use "git reset HEAD &lt;file&gt;..." to unstage)
#
# new file: README
#
The **git add** command takes a path name for either a file or a directory; if it’s a directory, the command adds all
the files in that directory recursively.
</code></pre>

<h4>Staging Modified Files</h4>

<pre><code>If you change a previously tracked file and run the 'git status' again, you get something like “Changed but not updated”
— which means that a file that is tracked has been modified in the working directory but not yet staged. To stage it,
you run the git add command (it’s a multipurpose command — you use it to begin tracking new files, to stage files,
and to do other things like marking merge-conflicted files as resolved). Let’s run **git add** now to stage the changed
file, and then run git status again, you will get: "Changes to be committed". So If you modify a file after you run 
git add, you have to run git add again to stage the latest version of the file.
</code></pre>

<h4>Viewing Staged and Unstaged Changes</h4>

<pre><code>If the git status command is too vague for you — you want to know exactly what you changed,
not just which files were changed — you can use the git diff command.
That command compares what is in your working directory with what is in your staging area. The
result tells you the changes you’ve made that you haven’t yet staged.
</code></pre>

<h4>Committing Changes</h4>

<pre><code>Now that your staging area is set up the way you want it, you can commit your changes. Remember
that anything that is still unstaged — any files you have created or modified that you haven’t run git
add on since you edited them — won’t go into this commit. They will stay as modified files on your disk.
$ git commit -m "Story 182: Fix benchmarks for speed"
</code></pre>

<h4>Skipping the Staging Area</h4>

<pre><code>If you want to skip the staging area, Git provides a simple shortcut. Providing the -a option to the git commit
command makes Git automatically stage every file that is already tracked before doing the commit, letting you skip
the git add part:$ git commit -a -m 'added new benchmarks'
</code></pre>

<h4>Removing Files</h4>

<pre><code>To remove a file from Git, you have to remove it from your tracked files (more accurately, remove it
from your staging area) and then commit. The **git rm** command does that and also removes the file
from your working directory so you don’t see it as an untracked file next time around:
$ git rm readme.txt
Another useful thing you may want to do is to keep the file in your working tree but remove it from
your staging area. In other words, you may want to keep the file on your hard drive but not have Git
track it anymore. This is particularly useful if you forgot to add something to your .gitignore file
and accidentally added it, like a large log file or a bunch of .a compiled files. To do this, use the
--cached option:
$ git rm --cached readme.txt
</code></pre>

<h4>Moving Files</h4>

<pre><code>Thus it’s a bit confusing that Git has a mv command. If you want to rename a file in Git, you can run
something like
$ git mv file_from file_to
and it works fine. In fact, if you run something like this and look at the status, you’ll see that Git
considers it a renamed file:
$ git mv README.txt README
$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Changes to be committed:
# (use "git reset HEAD &lt;file&gt;..." to unstage)
#
# renamed: README.txt -&gt; README
#
However, this is equivalent to running something like this:
$ mv README.txt README
$ git rm README.txt
$ git add README
Git figures out that it’s a rename implicitly, so it doesn’t matter if you rename a file that way or
with the mv command. The only real difference is that mv is one command instead of three — it’s a
convenience function.
</code></pre>

<h4>Viewing the Commit History</h4>

<pre><code>After you have created several commits, or if you have cloned a repository with an existing commit
history, you’ll probably want to look back to see what has happened. The most basic and powerful
tool to do this is the git log command.
One of the more helpful options is -p, which shows the diff introduced in each commit. You can also
use -n, which limits the output to only the last two entries:
$ git log -p -2
</code></pre>

<h4>Changing Last Commit</h4>

<pre><code>One of the common undos takes place when you commit too early and possibly forget to add some
files, or you mess up your commit message. If you want to try that commit again, you can run commit
with the --amend option:
$ git commit --amend
As an example, if you commit and then realize you forgot to stage the changes in a file you wanted to
add to this commit, you can do something like this:
$ git commit -m 'initial commit'
$ git add forgotten_file
$ git commit --amend
All three of these commands end up with a single commit — the second commit replaces the results of the first.
</code></pre>

<h4>Unstaging a Staged File</h4>

<pre><code>$ git add .
$ git status
# On branch master
# Changes to be committed:
# (use "git reset HEAD &lt;file&gt;..." to unstage)
#
# modified: README.txt
# modified: benchmarks.rb
#
Right below the “Changes to be committed” text, it says use git reset HEAD &lt;file&gt;... to unstage.
So, let’s use that advice to unstage the benchmarks.rb file:
$ git reset HEAD benchmarks.rb
benchmarks.rb: locally modified
$ git status
# On branch master
# Changes to be committed:
# (use "git reset HEAD &lt;file&gt;..." to unstage)
#
# modified: README.txt
#
# Changed but not updated:
# (use "git add &lt;file&gt;..." to update what will be committed)
# (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
#
# modified: benchmarks.rb
#
The command is a bit strange, but it works. The benchmarks.rb file is modified but once again unstaged.
</code></pre>

<h4>Unmodifying a Modified File</h4>

<pre><code>What if you realize that you don’t want to keep your changes to the benchmarks.rb file? How can you
easily unmodify it — revert it back to what it looked like when you last committed (or initially cloned,
or however you got it into your working directory)? Luckily, git status tells you how to do that,
too. In the last example output, the unstaged area looks like this:
# Changed but not updated:
# (use "git add &lt;file&gt;..." to update what will be committed)
# (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
#
# modified: benchmarks.rb
#
$ git checkout -- benchmarks.rb
$ git status
# On branch master
# Changes to be committed:
# (use "git reset HEAD &lt;file&gt;..." to unstage)
#
# modified: README.txt
#
</code></pre>

<h4>Showing Remotes</h4>

<pre><code>$ git remote -v
</code></pre>

<h4>Adding Remote Repositories</h4>

<pre><code>$ git remote
origin
$ git remote add pb git://github.com/paulboone/ticgit.git
$ git remote -v
origin git://github.com/schacon/ticgit.git
pb git://github.com/paulboone/ticgit.git
</code></pre>

<h4>Fetching and Pulling from Your Remotes</h4>

<pre><code>$ git fetch [remote-name]
$ git pull
Running git pull generally fetches data from the server you originally cloned from and automatically tries to
merge it into the code you’re currently working on.
</code></pre>

<h4>Pushing to Your Remotes</h4>

<pre><code>When you have your project at a point that you want to share, you have to push it upstream. The
command for this is simple: git push [remote-name] [branch-name]. If you want to push your
master branch to your origin server (again, cloning generally sets up both of those names for you
automatically), then you can run this to push your work back up to the server:
$ git push origin master
This command works only if you cloned from a server to which you have write access and if nobody
has pushed in the meantime. If you and someone else clone at the same time and they push upstream
and then you push upstream, your push will rightly be rejected. You’ll have to pull down their work
first and incorporate it into yours before you’ll be allowed to push.
</code></pre>

<h4>Inspecting a Remote</h4>

<pre><code>If you want to see more information about a particular remote, you can use the git remote show
[remote-name] command. If you run this command with a particular shortname, such as origin, you
get something like this:
$ git remote show origin
* remote origin
URL: git://github.com/schacon/ticgit.git
Remote branch merged with 'git pull' while on branch master
master
Tracked remote branches
master
ticgit
</code></pre>

<h4>Removing and Renaming Remotes</h4>

<pre><code>If you want to rename a reference, in newer versions of Git you can run git remote rename to
change a remote’s shortname. For instance, if you want to rename pb to paul, you can do so with git
remote rename:
$ git remote rename pb paul
$ git remote
origin
paul
It’s worth mentioning that this changes your remote branch names, too. What used to be referenced at
pb/master is now at paul/master.
If you want to remove a reference for some reason — you’ve moved the server or are no longer using
a particular mirror, or perhaps a contributor isn’t contributing anymore — you can use git remote
rm:
$ git remote rm paul
$ git remote
origin
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pipeline in rails3.1+]]></title>
    <link href="http://YunnuY.github.com/blog/2012/12/02/pipeline-in-rails3-dot-1-plus/"/>
    <updated>2012-12-02T16:22:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/12/02/pipeline-in-rails3-dot-1-plus</id>
    <content type="html"><![CDATA[<p> pipeline 是rails3.1后引进的一个很有用的特性，它可以：
 1. 将你的 js，css 等静态资源 compile 到一个文件，减少了浏览器到服务器取这些资源时的连接数量；
 2. 压缩这个加工后的文件，并添加时间戳，减少了文件体积及加载次数；
 3. 可以放在 app,lib,vendor 的 asset 目录下，方便管理, 同时也让你可以用 help 方法方便的访问这些 resource；</p>

<p> 以 js 文件举例子, 在app/asset/javascript中有一个 application.js 文件，它的内容如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// This is a manifest file that'll be compiled into application.js, which will include all the files
</span><span class='line'>// listed below.
</span><span class='line'>//
</span><span class='line'>// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
</span><span class='line'>// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
</span><span class='line'>//
</span><span class='line'>// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
</span><span class='line'>// the compiled file.
</span><span class='line'>//
</span><span class='line'>// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
</span><span class='line'>// GO AFTER THE REQUIRES BELOW.
</span><span class='line'>//
</span><span class='line'>//= require jquery
</span><span class='line'>//= require jquery_ujs
</span><span class='line'>//= require twitter/bootstrap
</span><span class='line'>//= require sequence.jquery-min.js
</span><span class='line'>//= require_tree .</span></code></pre></td></tr></table></div></figure>


<p>很简单，你可以将<code>app/assets/javascripts</code>, <code>lib/assets/javascripts</code>, <code>vendor/assets/javascripts</code>想象成一个逻辑目录，
然后 rails 的 pipeline 引擎会到逻辑目录里去找这个文件中提到的 js 文件，然后 compile 到application.js里面去。<strong>但是有个例外，在上面
的例子中，require_tree不会到逻辑目录里去找，而是只到&#8217;app/assets/javascripts&#8217;里去找。</strong></p>

<pre>
The require_tree directive tells Sprockets to recursively include all JavaScript files in the specified directory into the output. These paths must be specified relative to the manifest file. You can also use the require_directory directive which includes all JavaScript files only in the directory specified, without recursion.
</pre>


<p>希望能帮到一些人, 不会像我一样错误的理解一个知识点，浪费2个小时找js文件为什么没有。。。</p>

<p> <!-- more --></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Game theory - 博弈论]]></title>
    <link href="http://YunnuY.github.com/blog/2012/08/24/game-theory/"/>
    <updated>2012-08-24T23:31:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/08/24/game-theory</id>
    <content type="html"><![CDATA[<p>游戏中双方为了达到各自的目标和利益，各方必须考虑对手的各种可能的行动方案，并力图选取对自己最为有利或最为合理的方案。
博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。
 <!-- more --></p>

<h2>非零和博弈</h2>

<p>是一种非合作下的博弈，博弈中各方的收益或损失的总和不是零值，自己的所得并不与他人的所失的大小相等。<strong>双方有合作的可能</strong>。</p>

<h3>囚徒困境</h3>

<p>是博弈论的非零和博弈中具代表性的例子，<strong>反映個人最佳選擇並非团体最佳選擇</strong></p>

<blockquote><p>警方逮捕甲、乙两名嫌疑犯，但沒有足够证据指控二人有罪。於是警方分开囚禁嫌疑犯，分别和二人见面，并向雙方提供以下相同的选择：
- 若一人認罪並作证检控對方（相關術語稱「背叛」對方），而對方保持沉默，此人将即時獲释，沉默者将判監10年。
- 若二人都保持沉默（相關術語稱互相「合作」），则二人同樣判监半年。  <br/>
- 若二人都互相检举（互相「背叛」），則二人同樣判監2年。
試設想困境中兩名理性囚徒會如何作出選擇：  <br/>
- 若對方沉默、我背叛會讓我獲釋，所以會選擇背叛。
- 對方背叛指控我，我也要指控對方才能得到較低的刑期，所以也是會選擇背叛。</p></blockquote>

<p>二人面對的情況一樣，所以二人的理性思考都会得出相同的结论——选择背叛。
以全体利益而言，如果两个参与者都合作保持沉默，兩人都只會被判刑半年，总体利益更高，結果也比兩人背叛對方、判刑2年的情況較佳。</p>

<h2>零和博弈</h2>

<p>零和博弈(英语：Zero-Sum Game)又称零和游戏或零和賽局，与非零和博弈相对，是博弈论的一个概念，属非合作博弈，
指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”。<strong>双方不存在合作的可能</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[big data and cloud]]></title>
    <link href="http://YunnuY.github.com/blog/2012/08/23/big-data-and-cloud/"/>
    <updated>2012-08-23T23:31:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/08/23/big-data-and-cloud</id>
    <content type="html"><![CDATA[<p>今天公司的town hall是介绍了一些新技术及公司引入的情况。有钱好办事，公司在这方面还是挺投入的。
 <!-- more --></p>

<h2>big data</h2>

<p>首先说的是big data，什么是big data呢（后来发现不少是引用的IBM的）</p>

<h3>Volume:</h3>

<p>Enterprises are awash with ever-growing data of all types, easily amassing terabytes—even petabytes—of information.
Turn 12 terabytes of Tweets created each day into improved product sentiment analysis
Convert 350 billion annual meter readings to better predict power consumption</p>

<h3>Velocity:</h3>

<p>Sometimes 2 minutes is too late. For time-sensitive processes such as catching fraud, big data must be used as it streams into your enterprise in order to maximize its value.
Scrutinize 5 million trade events created each day to identify potential fraud
Analyze 500 million daily call detail records in real-time to predict customer churn faster</p>

<h3>Variety:</h3>

<p>Big data is any type of data - structured and unstructured data such as text, sensor data, audio, video, click streams, log files and more. New insights are found when analyzing these data types together.
Monitor 100’s of live video feeds from surveillance cameras to target points of interest
Exploit the 80% data growth in images, video and documents to improve customer satisfaction</p>

<h3>Veracity:</h3>

<p>1 in 3 business leaders don’t trust the information they use to make decisions. How can you act upon information if you don’t trust it? Establishing trust in big data presents a huge challenge as the variety and number of sources grows.</p>

<p>big data means ‘the art of possible&#8217;.我的理解是数据仓库和BI，在非数据库（非关系型数据库）维度的扩展。
举了个很生动的例子：google trend可以让我们不需要调查和研究，就知道哪里发生了什么事。</p>

<h2>SaaS</h2>

<p>然后说了下云计算，既SaaS (software as service), 它包括：<br/>
IaaS (Infrastructure as a Service)<br/>
PaaS (Platform as service)<br/>
Maas (Middleware as service)</p>

<p>SaaS 将软件和服务融合起来，开辟了一种新的商业模式。这一块我比较了解，可惜大爱的google和amazon在国内都被墙着。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[云存储]]></title>
    <link href="http://YunnuY.github.com/blog/2012/08/04/a-few-words-about-cloud-storage/"/>
    <updated>2012-08-04T15:33:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/08/04/a-few-words-about-cloud-storage</id>
    <content type="html"><![CDATA[<p>写博客有时想放一些图片，就想到了云储存。平常也关注了下，但没认真考察过。
首先说一下访问云的方式，从严格到开放的顺序：
 <!-- more -->
1. 需要登录他们的网站或者客户端，才能使用。既没有任何API。
2. 有特定API，且是需要验证。如php，ios等。
3. 有通用API，如json，uri等，但是会跳转到他们的网站。（外链 - Direct link:download)
4. 通过url直接访问。（直链 - Direct link:streaming)</p>

<p>然后看一下收费，基本都是这种存储 + 流量 分开付费的方式。</p>

<p>然后我们看看一些云存储服务商。</p>

<ol>
<li>先说互联网老大，google storage,支持1，2，3种访问方式，到2012年底前，以下免费：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>5 GB of storage
</span><span class='line'>25 GB of download data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
</span><span class='line'>25 GB of upload data (20 GB to Americas and EMEA*; 5 GB to Asia-Pacific)
</span><span class='line'>30,000 GET, HEAD requests
</span><span class='line'>3,000 PUT, POST, GET bucket, GET service requests</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>opendrive *
5G的免费存储，支持1，2，3种访问方式，通过交换链接，可以支持第4种访问方式加少量流量。
适合写博客的我。<a href="http://www.opendrive.com" title="OpenDrive - Online storage, backup and file management">OpenDrive</a></p></li>
<li><p>华为dbank
提供较高性价比的直链服务。0.48/g，比google和有拍都便宜。</p></li>
<li><p>有拍
支持1，2，3，4种访问方式，无免费配额。听说服务稳定，价格适中。</p></li>
<li>盛大云
支持1，2，无免费版，仿亚马逊的，现在提够很多云服务。</li>
<li>金山快盘 *
注册送5G，支持1，2，3种访问方式。免费使用。</li>
<li>skydrive *
之前是25G，现在注册只有5G了。支持1，2，3种访问方式。有免费配额。</li>
<li>dropbox
和skydrive类似。</li>
<li>ubuntu one *
我用ubuntu，所以也用上了这个。5G免费配额。</li>
<li>amazon s3
知道它是老大，可惜一直被墙，无缘使用。</li>
</ol>


<p>   *表示已经试用。</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[create logo with inkscape]]></title>
    <link href="http://YunnuY.github.com/blog/2012/08/04/create-logo-with-inkscape/"/>
    <updated>2012-08-04T12:25:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/08/04/create-logo-with-inkscape</id>
    <content type="html"><![CDATA[<p>   最近想为我的域名www.yunnuy.com做一个小logo，于是到网上找了个画矢量图的工具。由于我用的unbutu，在软件中心
矢量类排名第一的就是inkscape了，所以下载了下来，看了点资料，开始动手。
 <!-- more -->
   灵感来源与google play中的一些图标，总体思路是方块中放一些文字。</p>

<p> 1.首先建立一个rectangle，调整他的fill(即中间填充部分)及stroke(即边框)。我调粗了stroke，并改为圆角。</p>

<p> 2.文字部分我打算用一个灵动一些的Y加两个规矩的un，这样不至于单调。不用找艺术字，用brush工具，画出一个Y出来，我画了3笔(3个object)，这样有泼墨的感觉，然后group起来，变成一个object。</p>

<p> 3.输入un，选择字体，字号和颜色。这时最大字体也达不到我的要求，我就把un做group操作，之后就可以像个普通对象那样缩放了。</p>

<p> 4.将y un调整位置，并group。
<img class="right" src="https://www.opendrive.com/files/OV8yMjAwMTIyX25OekJO/yunnuy.png" width="200" title="yunnuy" ></p>

<p> 5.现在有2个object了，一个是框，另一个是3个字yun。我需要把3个字放进框里，我试验了之间拖进去，这样的效果好像是在框里面写两个字，颜色会改变。我想到了layer。我将字移动到另一个layer，然后移动到框中。最后group起来。</p>

<p> 6.基本形态还不错，但是显得有点单调。再给它加个类似阴影的衬拖。类似第1步，建一个square，调整fill和stroke，然后放在layer2，并移到我图形的右下角落。</p>

<p> 这样我的第一个log就建好了。学了2个小时左右吧，肯定不是最好的实现方式，但基本也满足我个性化logo的需求了。感谢开源，给我们带来这样便利的工具。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu 12.04 创建启动器]]></title>
    <link href="http://YunnuY.github.com/blog/2012/07/14/ubuntu-12-dot-04-chuang-jian-qi-dong-qi/"/>
    <updated>2012-07-14T01:03:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/07/14/ubuntu-12-dot-04-chuang-jian-qi-dong-qi</id>
    <content type="html"><![CDATA[<p>最近又想折腾下android，所有在ubuntu下弄了下开发环境。
值得一提的是，ubuntu下如果你要在命令行里能使用你的
命令，你需要将可执行文件路径加进<code>$PATH</code>, 那如果你想在
桌面启动一个应用程序，怎么办呢？</p>

<!-- more -->


<p>很简单，看我添加<code>eclipse</code>的例子：
先添加一个文件<code>/usr/share/applications/eclipse.desktop</code>
内容类似如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Desktop Entry]
</span><span class='line'>Version=1.0
</span><span class='line'>Name=eclipse
</span><span class='line'>Exec=/home/ming/applications/eclipse/eclipse
</span><span class='line'>Terminal=false
</span><span class='line'>Icon=/home/ming/applications/eclipse/icon.xpm
</span><span class='line'>Type=Application
</span><span class='line'>Categories=Development</span></code></pre></td></tr></table></div></figure>


<h2>my development enviroment</h2>

<h2>java Develop Kit 1.7  </h2>

<p>installed in <code>/usr/lib/jvm/jdk1.7.0_05</code>, configred in <code>.bashrc</code></p>

<h2>eclipse 4.2 </h2>

<p>installed in  <code>/home/ming/applications/eclipse</code>,
added a luncher to <code>/usr/share/applications/eclipse.desktop</code></p>

<h2>android SDK </h2>

<p>/home/ming/applications</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node.js底层是基于什么原理]]></title>
    <link href="http://YunnuY.github.com/blog/2012/06/28/node-dot-jsdi-ceng-shi-ji-yu-shi-yao-yuan-li/"/>
    <updated>2012-06-28T22:44:00+08:00</updated>
    <id>http://YunnuY.github.com/blog/2012/06/28/node-dot-jsdi-ceng-shi-ji-yu-shi-yao-yuan-li</id>
    <content type="html"><![CDATA[<p>今天在社区里面闲逛，发现node.js很火。之前也零零星星的看过一些node.js的介绍，知道它底层是google v8引擎的 基于事件模型的服务器软件。但脑子有几个why一直挥之不去：</p>

<!-- more -->


<p> 1.基于事件模型的理论并不新鲜，为什么没有在其他语言中实现。可能的原因是，其他语言都没有基于基于事件模型的概念或者习惯， 而在浏览器里运行的js则处处都是事件，onclick，onmouseover等等。
 2.在不是基于事件的http请求中，客户端和服务器建立tcp连接（http都是基于tcp吧），直到响应完毕，断掉tcp连接。 而现在node.js中在收到请求后，通知客户端断掉tcp连接，并说我之后会把找到的东西发给你。问题来了：服务器端是 怎么找到客户器端的呢？我们知道客户端去找服务器端是花了不少力气的，先dns，再ip；现在tcp断了，我不知道有什么机制 能让服务器找到客户端？难道node.js不是用在这样的场景么？</p>

<p>好吧，精力有限，还来不及去研究这个问题的答案。哪位同学了解的话，解答一下吧。纯属解惑。</p>
]]></content>
  </entry>
  
</feed>
